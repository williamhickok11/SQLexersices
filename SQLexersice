For each of the following exercises, provide the appropriate query. Yes, even the ones that are expressed in the form of questions. 
Everything from class and the Sqlite Documentation is fair game.

1.Provide a query showing Customers (just their full names, customer ID and country) who are not in the US.
SELECT FirstName, LastName, CustomerId, Country FROM Customer WHERE Country != "USA"
 
2.Provide a query only showing the Customers from Brazil.
SELECT FirstName, LastName, CustomerId, Country FROM Customer WHERE Country = "Brazil"   

3.Provide a query showing the Invoices of customers who are from Brazil. The resultant table should show the customer's full name, Invoice ID, 
Date of the invoice and billing country.
SELECT FirstName || " "||  LastName AS fullName, InvoiceId, InvoiceDate, BillingCountry FROM Invoice
INNER JOIN Customer
WHERE BillingCountry = "Brazil" ORDER BY fullName

4.Provide a query showing only the Employees who are Sales Agents.
SELECT Title FROM Employee WHERE Title = "Sales Support Agent"

5.Provide a query showing a unique list of billing countries from the Invoice table.
SELECT DISTINCT BillingCountry FROM Invoice

6.Provide a query that shows the invoices associated with each sales agent. The resultant table should include the Sales Agent's full name.
SELECT FirstName || " " || LastName AS fullName, InvoiceId, Title 
FROM Employee
INNER JOIN Invoice
WHERE Title = "Sales Support Agent"

7.Provide a query that shows the Invoice Total, Customer name, Country and Sale Agent name for all invoices and customers.
SELECT Total, c.FirstName || " " || c.LastName AS fullName, c.Country, e.FirstName || " " || e.LastName AS employeeName
FROM Invoice i
INNER JOIN Customer c on c.CustomerId = i.CustomerId
INNER JOIN Employee e on e.EmployeeId = c.SupportRepId

8.How many Invoices were there in 2009 and 2011? What are the respective total sales for each of those years?(include both the answers and 
the queries used to find the answers)
SELECT COUNT(InvoiceDate) FROM Invoice WHERE DATE(InvoiceDate) LIKE "2009%"
83
SELECT SUM(Total) FROM Invoice WHERE DATE(InvoiceDate) LIKE "2009%"
449.46
SELECT COUNT(InvoiceDate) FROM Invoice WHERE DATE(InvoiceDate) LIKE "2011%"
83
SELECT SUM(Total) FROM Invoice WHERE DATE(InvoiceDate) LIKE "2011%"
469.58

9.Looking at the InvoiceLine table, provide a query that COUNTs the number of line items for Invoice ID 37.
SELECT COUNT(*) FROM InvoiceLine WHERE InvoiceId = "37"

10.Looking at the InvoiceLine table, provide a query that COUNTs the number of line items for each Invoice. HINT: GROUP BY
SELECT COUNT(InvoiceLineId), InvoiceId FROM InvoiceLine GROUP BY(InvoiceId)

11.Provide a query that includes the track name with each invoice line item.
SELECT Name FROM InvoiceLine il
INNER JOIN Track t on il.TrackId = t.TrackId

[1:11] 
12.Provide a query that includes the purchased track name AND artist name with each invoice line item.
SELECT Name, Composer FROM InvoiceLine il
INNER JOIN Track t on il.TrackId = t.TrackId

13.Provide a query that shows the # of invoices per country. HINT: GROUP BY
SELECT COUNT(*), BillingCountry FROM Invoice GROUP BY(BillingCountry)

14.Provide a query that shows the total number of tracks in each playlist. The Playlist name should be include on the resulant table.
SELECT COUNT(*), pt.PlaylistId, Name FROM PlaylistTrack pt
INNER JOIN Playlist pl on pl.PlaylistId = pt.PlaylistId GROUP BY(pt.PlaylistId)

15.Provide a query that shows all the Tracks, but displays no IDs. The resultant table should include the Album name, Media type and Genre.
SELECT mt.Name, t.Name, g.Name FROM Track t
INNER JOIN MediaType mt ON mt.MediaTypeId = t.MediaTypeId
INNER JOIN Genre g ON g.GenreId = t.GenreId

16.Provide a query that shows all Invoices but includes the # of invoice line items.
SELECT COUNT(il.InvoiceId), i.* FROM Invoice i
INNER JOIN InvoiceLine il ON i.InvoiceId = il.InvoiceId GROUP BY(il.InvoiceId)

17.Provide a query that shows total sales made by each sales agent.
SELECT SUM(Total) FROM Employee e 
INNER JOIN Customer c ON c.SupportRepId = e.EmployeeId
INNER JOIN Invoice i ON i.CustomerId = c.CustomerId GROUP BY(e.EmployeeId)

18.Which sales agent made the most in sales in 2009? HINT: MAX
SELECT SUM(Total) AS totalSales, e.FirstName FROM Employee e
INNER JOIN Customer c ON c.SupportRepId = e.EmployeeId
INNER JOIN Invoice i ON i.CustomerId = c.CustomerId 
WHERE DATE(i.InvoiceDate) LIKE "2009%"
GROUP BY(e.EmployeeId)
ORDER BY totalSales
DESC LIMIT 1;

19.Which sales agent made the most in sales over all?
SELECT SUM(Total) AS totalSales, e.FirstName FROM Employee e 
INNER JOIN Customer c ON c.SupportRepId = e.EmployeeId
INNER JOIN Invoice i ON i.CustomerId = c.CustomerId GROUP BY(e.EmployeeId)
ORDER BY totalSales
DESC LIMIT 1;

20.Provide a query that shows the # of customers assigned to each sales agent.
SELECT COUNT(CustomerId), e.FirstName, e.LastName From Customer c
INNER JOIN Employee e ON e.EmployeeId = c.SupportRepId
GROUP BY(EmployeeId)

21.Provide a query that shows the total sales per country. Which country's customers spent the most?
SELECT SUM(i.Total) AS totalSales, i.BillingCountry FROM Invoice i
GROUP BY BillingCountry
ORDER BY totalSales
DESC LIMIT 1;

22.Provide a query that shows the most purchased track of 2013.
SELECT SUM(InvoiceLine.Quantity) AS NumberOfTracksSold, Track.Name, Invoice.InvoiceDate AS DateSold FROM InvoiceLine
INNER JOIN Track ON Track.TrackId = InvoiceLine.TrackId
INNER JOIN Invoice ON Invoice.InvoiceId = InvoiceLine.InvoiceId
WHERE Invoice.InvoiceDate LIKE '%2013%'
GROUP BY Track.Name
ORDER BY NumberOfTracksSold DESC

23.Provide a query that shows the top 5 most purchased tracks over all.
SELECT SUM(il.Quantity) AS NumberOfTracksSold, t.Name, i.InvoiceDate AS DateSold FROM InvoiceLine il
INNER JOIN Track t ON t.TrackId = il.TrackId
INNER JOIN Invoice i ON i.InvoiceId = il.InvoiceId
WHERE i.InvoiceDate
GROUP BY t.Name
ORDER BY NumberOfTracksSold DESC
LIMIT 5

24.Provide a query that shows the top 3 best selling artists.
SELECT SUM(InvoiceLine.Quantity) AS NumberOfTracksSold, Track.Name, Invoice.InvoiceDate AS DateSold, Artist.Name AS ArtistName FROM InvoiceLine
INNER JOIN Track ON Track.TrackId = InvoiceLine.TrackId
INNER JOIN Invoice ON Invoice.InvoiceId = InvoiceLine.InvoiceId
INNER JOIN Album ON Album.AlbumId = Track.AlbumId
INNER JOIN Artist ON Artist.ArtistId = Album.ArtistId
GROUP BY Track.Name
ORDER BY NumberOfTracksSold DESC
LIMIT 3

25.Provide a query that shows the most purchased Media Type.
SELECT SUM(i.Total) AS TotalSales, t.Name FROM MediaType mt
INNER JOIN Track t ON mt.MediaTypeId = t.MediaTypeId
INNER JOIN InvoiceLine il ON il.TrackId = t.TrackId
INNER JOIN Invoice i ON i.InvoiceId = il.InvoiceId
GROUP BY t.Name
ORDER BY TotalSales DESC
LIMIT 1